{"ast":null,"code":"var _jsxFileName = \"/home/al/Documents/PrisonSkills/Front-End/src/components/Register.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nconst initialVal = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  terms: false\n};\nexport default function Register(props) {\n  const [regStaff, setRegStaff] = useState([]);\n\n  function submitHandler(values, actions) {\n    axios.post(\"https://prisonerbw.herokuapp.com/api/auth/register\", values).then(response => {\n      console.log(response);\n      console.log(props); // setRegStaff(\n      //   [...userList,values]\n      // );\n\n      actions.resetForm();\n    }).catch(e => console.log(e)).finally(() => {\n      console.log(\"Axios request finished.\");\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: initialVal,\n    onSubmit: submitHandler // validationSchema={validationSchema}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"current_username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"username\"), React.createElement(Field, {\n    type: \"text\",\n    id: \"current_username\",\n    name: \"username\",\n    placeholder: \"Enter username here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"username\",\n    component: \"div\",\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"current_password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Field, {\n    type: \"password\",\n    id: \"current_password\",\n    name: \"password\",\n    placeholder: \"Enter your password here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"password\",\n    component: \"div\",\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"prison_id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Prison id\"), React.createElement(Field, {\n    type: \"text\",\n    id: \"prison_id\",\n    name: \"prison_id\",\n    placeholder: \"Enter facility ID here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"prison_id\",\n    component: \"div\",\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["/home/al/Documents/PrisonSkills/Front-End/src/components/Register.js"],"names":["React","useState","axios","styled","Yup","Formik","Form","Field","ErrorMessage","initialVal","name","email","password","terms","Register","props","regStaff","setRegStaff","submitHandler","values","actions","post","then","response","console","log","resetForm","catch","e","finally"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,IAAI,EAAE,EADS;AAEfC,EAAAA,KAAK,EAAE,EAFQ;AAGfC,EAAAA,QAAQ,EAAE,EAHK;AAIfC,EAAAA,KAAK,EAAC;AAJS,CAAnB;AAQE,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASiB,aAAT,CAAuBC,MAAvB,EAA+BC,OAA/B,EAAwC;AACpClB,IAAAA,KAAK,CACJmB,IADD,CACM,oDADN,EAC4DF,MAD5D,EAECG,IAFD,CAEMC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ,EAFgB,CAGhB;AACA;AAEA;;AACAK,MAAAA,OAAO,CAACM,SAAR;AACD,KAVD,EAWCC,KAXD,CAWOC,CAAC,IAAIJ,OAAO,CAACC,GAAR,CAAYG,CAAZ,CAXZ,EAYCC,OAZD,CAYS,MAAM;AACbL,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,KAdD;AAgBH;;AACD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEhB,UADjB;AAEE,IAAA,QAAQ,EAAES,aAFZ,CAGE;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAO,IAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,kBAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,WAAW,EAAC,qBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EASE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAC,KAAxC;AAA8C,IAAA,SAAS,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAaE;AAAO,IAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,EAcA,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,EAAE,EAAC,kBAFL;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,WAAW,EAAC,0BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdA,EAoBA,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAC,KAAxC;AAA8C,IAAA,SAAS,EAAC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBA,EAsBA;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAtBA,EAuBE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,WAFL;AAGE,IAAA,IAAI,EAAC,WAHP;AAIE,IAAA,WAAW,EAAC,wBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,EA6BE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,WAAnB;AAA+B,IAAA,SAAS,EAAC,KAAzC;AAA+C,IAAA,SAAS,EAAC,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,EAgCE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCF,CALF,CADF,CADJ;AA6CH","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nconst initialVal = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    terms:false\n  };\n\n  \n  export default function Register(props) {\n    const [regStaff, setRegStaff] = useState([]);\n\n    function submitHandler(values, actions) {\n        axios\n        .post(\"https://prisonerbw.herokuapp.com/api/auth/register\", values)\n        .then(response => {\n          console.log(response);\n          console.log(props);\n          // setRegStaff(\n          //   [...userList,values]\n  \n          // );\n          actions.resetForm();\n        })\n        .catch(e => console.log(e))\n        .finally(() => {\n          console.log(\"Axios request finished.\");\n        });\n\n    }\n    return (\n        <div>\n          <Formik\n            initialValues={initialVal}\n            onSubmit={submitHandler}\n            // validationSchema={validationSchema}\n          >\n            <Form>\n              {/* Name */}\n              <label htmlFor=\"current_username\">username</label>\n              <Field\n                type=\"text\"\n                id=\"current_username\"\n                name=\"username\"\n                placeholder=\"Enter username here\"\n              />\n              <ErrorMessage name=\"username\" component=\"div\" className=\"error\" />\n\n              \n              {/* //Password */}\n              <label htmlFor=\"current_password\">Password</label>\n            <Field\n              type=\"password\"\n              id=\"current_password\"\n              name=\"password\"\n              placeholder=\"Enter your password here\"\n            />\n            <ErrorMessage name=\"password\" component=\"div\" className=\"error\" />\n\n            <label htmlFor=\"prison_id\">Prison id</label>\n              <Field\n                type=\"text\"\n                id=\"prison_id\"\n                name=\"prison_id\"\n                placeholder=\"Enter facility ID here\"\n              />\n              <ErrorMessage name=\"prison_id\" component=\"div\" className=\"error\" />\n\n              {/* //submit button */}\n              <button type=\"submit\">Submit</button>\n            </Form>\n          </Formik>\n        </div>\n      );\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}